/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sendmailservice;

import java.util.Properties;  
import javax.mail.*;  
import javax.mail.internet.*;
import java.io.File;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Timer;
import java.util.TimerTask;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;

/**
 *
 * @author Baki
 */
public class SendMailServiceIndex extends javax.swing.JFrame {

    /**
     * Creates new form SendMailServiceIndex
     */
    public SendMailServiceIndex() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(253, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addContainerGap(82, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    int sure = 15;
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        
        Timer timer = new Timer();        
        TimerTask task = new TimerTask(){
            public void run(){
                try {
                    if((getConfigData("appSettings", "autoRun")).equals("0")){
                        System.exit(0);
                    }
                } catch (Exception e) {
                }
                
                sure--;
                jLabel1.setText("Kontrole kalan: " + String.valueOf(sure));
                if(sure == 0){
                    sure = 15;
                    mailKontrol();
                }                
            }
        };
        
        timer.schedule(task, 0, 1000);
    }//GEN-LAST:event_formWindowOpened

    
    int hataAdet = 0;
    public void mailKontrol(){
        
        String folderName = getConfigData("folderNames","SendMailServiceFolderName");
                
        File f = null;
        String[] paths;
        
        f = new File(folderName);
        paths = f.list();
        String xmlFileName = null;
        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
        
        for(String file:paths) {
            xmlFileName = file;
            
            try {
                String mailOwner = null;
                String mailBody = null;
                String mailDate = null;
                String sendTo = null;
                                                
                try {
                    mailOwner = getXmlData(folderName, xmlFileName, "mailOwner");
                    Date date = new Date();
                    mailDate = dateFormat.format(date);
                    mailBody = getXmlData(folderName, xmlFileName, "mailBody") + "\n\nMail GÃ¶nderim Tarihi: " + mailDate;                    
                } catch (Exception e) {
                    try {
                        Process pro = Runtime.getRuntime().exec("java -jar xmlCreator.jar exception SendMailServiceIndex EX_1 " + e);
                    } catch (Exception ex) {          
                    }
                }
                
                try {
                    sendTo = getConfigData("appSettings","privateMailAddress");
                    mailGonder(mailBody, sendTo, mailOwner);
                } catch (Exception e) {
                    try {
                        Process pro = Runtime.getRuntime().exec("java -jar xmlCreator.jar exception SendMailServiceIndex EX_2 " + e);
                    } catch (Exception ex) {          
                    }
                }
                
                try {                  
                    File files = new File(folderName + "/" +  xmlFileName);
                    files.delete();        
                } catch (Exception e) {  
                    try {
                        Process pro = Runtime.getRuntime().exec("java -jar xmlCreator.jar exception SendMailServiceIndex EX_3 " + e);
                    } catch (Exception ex) {          
                    }
                }
                
                try {                    
                    Process pro = Runtime.getRuntime().exec("java -jar xmlCreator.jar sendedmail " + mailOwner + " " + sendTo + " " + mailBody);
                } catch (Exception e) {
                    try {
                        Process pro = Runtime.getRuntime().exec("java -jar xmlCreator.jar exception SendMailServiceIndex EX_4 " + e);
                    } catch (Exception ex) {          
                    }
                }
                                
            } catch (Exception e) {
                try {
                    Process pro = Runtime.getRuntime().exec("java -jar xmlCreator.jar exception SendMailServiceIndex EX_5 " + e);
                } catch (Exception ex) {          
                }
            }
        }
    }
    
    public void mailGonder(String mailicerik, String goTo, String subject){
        String host = getConfigData("mailservice","host");
        final String user = getConfigData("mailservice","mail");
        final String password = getConfigData("mailservice","password");
    
        String to = goTo;
        
        //JOptionPane.showMessageDialog(null, "mailicerik : " + mailicerik + ", goTo : " + goTo + ", subject : " + subject);
  
        Properties props = new Properties();  
        props.put("mail.smtp.host", host);
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.port", "587");
        props.put("mail.smtp.starttls.enable", "true");

        Session session = Session.getDefaultInstance(props,  
        new javax.mail.Authenticator() {  
        protected PasswordAuthentication getPasswordAuthentication() {  
            return new PasswordAuthentication(user,password);  
        }  
         });  

        try {  
            MimeMessage message = new MimeMessage(session);  
            message.setFrom(new InternetAddress(user));  
            message.addRecipient(Message.RecipientType.TO,new InternetAddress(to));  
            message.setSubject(getConfigData("mailservice","SendMailServiceMailSubject") + " - " + subject);  
            message.setText(mailicerik);
          
            Transport.send(message);  

            } catch (MessagingException e) {
                hataAdet++;
              
            try {
                Process pro = Runtime.getRuntime().exec("java -jar xmlCreator.jar exception SendMailServiceIndex EX_6 " + e);
            } catch (Exception ex) {          
            }
        }  
    }
    
    public static String getXmlData(String directoryName, String xmlFileName, String getXmlName){
        String strXmlDate = null;
		
        try {
            File inputFile = new File(directoryName + "/" + xmlFileName);
            DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
            DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
            Document doc = dBuilder.parse(inputFile);
            doc.getDocumentElement().normalize();
            NodeList nList = doc.getElementsByTagName("mail");

            for (int temp = 0; temp < nList.getLength(); temp++) {
                Node nNode = nList.item(temp);
                if (nNode.getNodeType() == Node.ELEMENT_NODE) {
                   Element eElement = (Element) nNode;
                   strXmlDate = eElement.getElementsByTagName(getXmlName).item(0).getTextContent();
                }
            }
        } catch (Exception e) {
            try {
                Process pro = Runtime.getRuntime().exec("java -jar xmlCreator.jar exception SendMailServiceIndex EX_7 " + e);
            } catch (Exception ex) {          
            }
        }

        return strXmlDate;
    }
    
    public static String getConfigData(String tagName, String configName){
        String strXmlDate = null;
		
        try {
            File inputFile = new File("../config/config.xml");
            DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
            DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
            Document doc = dBuilder.parse(inputFile);
            doc.getDocumentElement().normalize();
            NodeList nList = doc.getElementsByTagName(tagName);

            for (int temp = 0; temp < nList.getLength(); temp++) {
                Node nNode = nList.item(temp);
                if (nNode.getNodeType() == Node.ELEMENT_NODE) {
                   Element eElement = (Element) nNode;
                   strXmlDate = eElement.getElementsByTagName(configName).item(0).getTextContent();
                }
            }
        } catch (Exception e) {
            try {
                //Process pro = Runtime.getRuntime().exec("java -jar xmlCreator.jar exception SendMailServiceIndex EX_2 " + e);
            } catch (Exception ex) {          
            }
        }

        return strXmlDate;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SendMailServiceIndex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SendMailServiceIndex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SendMailServiceIndex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SendMailServiceIndex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SendMailServiceIndex().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
